name: Check node build
description: GitHub Action that determines if the code has changed without actually running a build.
inputs:
  github-token:
    required: true
    description: GitHub token that can create/delete comments. e.g. 'secrets.GITHUB_TOKEN'
runs:
  using: composite
  steps:
    - name: Run ci
      shell: bash
      run: npm ci
    - name: Npm run prepare
      shell: bash
      run: npm run prepare
    - name: Compare the committed and actual dist/ builds
      shell: bash
      run: |
        if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
          echo "Detected uncommitted changes after build.  See status below:"
          git diff
          echo ""
          echo "please run:"
          echo "    npm run prepare"
          echo ""
          echo "and commit the changes"
          exit 1
        fi
    - name: Check for run instructions
      uses: peter-evans/find-comment@v1
      if: github.event_name == 'pull_request' && (success() || failure())
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: "github-actions[bot]"
        body-includes: "npm run prepare"
    - name: Create instructions comment
      if: github.event_name == 'pull_request' && failure() && steps.fc.outputs.comment-id == ''
      uses: peter-evans/create-or-update-comment@v1
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Changes need to be built and commited to `./dist`.

          In your local repo, run:
          ```
          npm run prepare
          git commit -a --amend --no-edit
          ```
          This will add those changes to your last commit.  Push that to your PR.
    - name: Delete instructions comment
      if: github.event_name == 'pull_request' && success() && steps.fc.outputs.comment-id != ''
      uses: jungwinter/comment@v1
      with:
        type: delete
        comment_id: ${{ steps.fc.outputs.comment-id }}
        token: ${{ inputs.github-token }}
