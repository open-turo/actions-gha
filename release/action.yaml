name: GitHub Action Release & Publish
description: GitHub Action that produces a new Release of an Action - adds a new major tag
inputs:
  checkout-repo:
    required: false
    description: Perform checkout as first step of action
    default: "true"
  dry-run:
    required: false
    description: >-
      Whether to run semantic release in `dry-run` mode. It will override the
      `dryRun` attribute in your configuration file
  extra-plugins:
    required: false
    description: >-
      Extra plugins for pre-install. You can also specify specifying version
      range for the extra plugins if you prefer.
  github-token:
    required: false
    description: >-
      GitHub token that can create/delete comments. e.g.  'secrets.GITHUB_TOKEN'
outputs:
  new-release-published:
    description: Whether a new release was published
    value: ${{ steps.release.outputs.new_release_published }}
  new-release-version:
    description: Version of the new release
    value: ${{ steps.release.outputs.new_release_version }}
  new-release-major-version:
    description: Major version of the new release
    value: ${{ steps.release.outputs.new_release_major_version }}
runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      if: inputs.checkout-repo
      with:
        fetch-depth: 0
    # TODO(shakefu): This is a work around while we resolve the compatibility
    # issue with cycjimmy's action and SemVer >20
    - uses: open-turo/action-setup-tools@v1
    # Install open-turo semantic release config
    - name: Install dependencies
      shell: bash
      run: npm install '@open-turo/semantic-release-config@^1.4.0' --no-save
    - name: Semantic release
      id: release
      uses: cycjimmy/semantic-release-action@v3
      env:
        GITHUB_TOKEN: ${{ inputs.github-token || env.GITHUB_TOKEN }}
      with:
        dry_run: ${{ inputs.dry-run }}
        extra_plugins: ${{ inputs.extra-plugins }}
    - name: Fetch tags
      if: steps.release.outputs.new_release_published == 'true'
      shell: bash
      run: |
        git fetch --tags
        git clean -fd
    - name: Major branch
      if: steps.release.outputs.new_release_published == 'true'
      uses: open-turo/action-major-release@v1
      with:
        major-version: ${{ steps.release.outputs.new_release_major_version }}
